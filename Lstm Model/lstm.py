# -*- coding: utf-8 -*-
"""Lstm.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MICHhcI00SFkfdF7TLEw3nXhGS4-EwgF
"""

# Commented out IPython magic to ensure Python compatibility.
from google.colab import drive
drive.mount('/content/drive')
# %cd drive/MyDrive/LSTM
!ls

# Commented out IPython magic to ensure Python compatibility.
# %load_ext autoreload
# %reload_ext autoreload
# %autoreload 2

from utilities.data_manipulation import get_data
x_train, y_train, x_test, y_test, training_data_len, close_df = get_data()

from utilities.get_model import get_model
from tensorflow.keras.callbacks import EarlyStopping
model = get_model(x_train)
# training the model
early_stopping = EarlyStopping(monitor='loss', patience=10, restore_best_weights = True, verbose=10)
lstm_history = model.fit(x=x_train, y=y_train, batch_size=64, epochs=40,shuffle=False,validation_split=0.1,
                         callbacks=[early_stopping])

from utilities.prediction import predict
validation_df = predict(model.predict(x_test), y_test, training_data_len, close_df)

from utilities.visuals import plotting
plotting(validation_df["real data"], title="Actual VS predicted", y_label="Price", 
         data2=validation_df['predictions'], legend_d1="Real", legend_d2="Predicted", save_plot=False, plot_name="test.png")

from tensorflow.keras.models import load_model

lstm_model=load_model("LSTM.hdf5")

pred=lstm_model.predict(x_test)

x_test

